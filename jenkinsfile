def tomcatServerUrl = "http://172.173.216.209:8080/"
//restrict pipeline into running in a container
pipeline {
  agent any
  stages {
    //Use this code for online pipeline script option
     /* stage('Clone') {
      steps {
        //download code from github
        git 'https://github.com/harihsk44/CICDweb.git'
      }

    }*/
    stage('Build-test') {
      steps {
        //Run the maven build
        // sh '"mvn" -Dmaven.test.failure.ignore clean install
        // docker currently creates an image during runtime 
        script{
            docker.image('maven:latest').inside('-u root -v $PWD:/app') {
            //sh '"mvn" -Dmaven.test.failure.ignore clean install'
            sh 'mvn clean install'
            sh 'mvn compile'
            //sh 'mvn clean package'
            // configured maven compiler and clear the target directory
  
            // selenium testing
            sh 'mvn test -Dbrowser=localchrome'
            publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, keepAll: true, reportDir: '', reportFiles: 'target/SampleWebJorge/index.jsp', reportName: 'Pipeline', reportTitles: '', useWrapperFileDirectly: true])
            
        }
        }
        
      }
    }


    /*
    stage('Test'){
        steps{
            // Selenium Testing here
            
        }
    }

    stage('Publish Report'){
        steps{
            // Merge Test branch to main branch
        }
    }
    commented out
    */




// realised that i cant reuse the same docker cloud for tomcat somehow

    stage('Deploy') {

      /* agent {
        docker {
            image 'tomcat:latest'
            args '-u root -v /root/.m3:/root/.m3'
        }
      // currently docker is only able to work once in a pipeline. Using docker twice causes issues
      } */

      steps {
        //deploy war on tomcat server
        deploy adapters: [tomcat8(url: "${tomcatServerUrl}",
            credentialsId: 'tomcat-credentials')],
          war: 'target/*.war',
          contextPath: 'pipeline-app'

// deploy war file into a docker container
// i think need install tomcat on the container as well

      }
    }

    stage('Ansible'){
        steps{
          // Ansible command
          sh 'curl -LJO https://raw.githubusercontent.com/harihsk44/CICDweb/testalt/hari.yml'
          sh 'curl -LJO https://raw.githubusercontent.com/harihsk44/CICDweb/testalt/AnsibleHost_key.pem'
          sh 'ansible-playbook hari.yml -vvv -u azureuser'
        }
    }

    
    /*
    stage('Cleanm') {
      steps {
        //basically deletes the workspace folder completely
        sh 'rm -r /var/lib/jenkins/workspace'
      }
    }
    Commented out
    */



  }
post { 
        always { 
            cleanWs()
// do an rm -r on /var/lib/jenkins/workspace if any workspace error comes
        }
    }
}
